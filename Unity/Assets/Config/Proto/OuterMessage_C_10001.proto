syntax = "proto3";
package ET;

message HttpGetRouterResponse
{
	repeated string Realms = 1;
	repeated string Routers = 2;
}

message RouterSync
{
	uint32 ConnectId = 1;
	string Address = 2;
}

// ResponseType M2C_TestResponse
message C2M_TestRequest // ILocationRequest
{
	int32 RpcId = 1;
	string request = 2;
}

message M2C_TestResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	string response = 4;
}

// ResponseType G2C_EnterMap
message C2G_EnterMap // ISessionRequest
{
	int32 RpcId = 1;
}

message G2C_EnterMap // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	/// 自己的UnitId
	int64 MyId = 4;
}

message MoveInfo
{
	repeated Unity.Mathematics.float3 Points = 1;
	Unity.Mathematics.quaternion Rotation = 2;
	int32 TurnSpeed = 3;
}

message UnitInfo
{
	int64 UnitId = 1;
	int32 ConfigId = 2;
	int32 Type = 3;
	Unity.Mathematics.float3 Position = 4;
	Unity.Mathematics.float3 Forward = 5;
	map<int32, int64> KV = 6;
	MoveInfo MoveInfo = 7;
}

message M2C_CreateUnits // IMessage
{
	repeated UnitInfo Units = 1;
}

message M2C_CreateMyUnit // IMessage
{
	UnitInfo Unit = 1;
}

message M2C_StartSceneChange // IMessage
{
	int64 SceneInstanceId = 1;
	string SceneName = 2;
}

message M2C_RemoveUnits // IMessage
{
	repeated int64 Units = 1;
}

message C2M_PathfindingResult // ILocationMessage
{
	int32 RpcId = 1;
	Unity.Mathematics.float3 Position = 2;
}

message C2M_Stop // ILocationMessage
{
	int32 RpcId = 1;
}

message M2C_PathfindingResult // IMessage
{
	int64 Id = 1;
	Unity.Mathematics.float3 Position = 2;
	repeated Unity.Mathematics.float3 Points = 3;
}

message M2C_Stop // IMessage
{
	int32 Error = 1;
	int64 Id = 2;
	Unity.Mathematics.float3 Position = 3;
	Unity.Mathematics.quaternion Rotation = 4;
}

// ResponseType G2C_Ping
message C2G_Ping // ISessionRequest
{
	int32 RpcId = 1;
}

message G2C_Ping // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 Time = 4;
}


message G2C_Test // ISessionMessage
{
}

// ResponseType M2C_Reload
message C2M_Reload // ISessionRequest
{
	int32 RpcId = 1;
	string Account = 2;
	string Password = 3;
}

message M2C_Reload // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

// ResponseType R2C_Login
message C2R_Login // ISessionRequest
{
	int32 RpcId = 1;
	string  Account = 2;  // 帐号
	string  Password = 3;  // 密码
}

message R2C_Login // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	string Address = 4;
	int64 Key = 5;
	int64 GateId = 6;
}

// ResponseType G2C_LoginGate
message C2G_LoginGate // ISessionRequest
{
	int32 RpcId = 1;
	int64 Key = 2;  // 帐号
	int64 GateId = 3;
}

message G2C_LoginGate // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 PlayerId = 4;
}

message G2C_TestHotfixMessage // ISessionMessage
{
	string Info = 1;
}

// ResponseType M2C_TestRobotCase
message C2M_TestRobotCase // ILocationRequest
{
	int32 RpcId = 1;
	int32 N = 2;
}

message M2C_TestRobotCase // ILocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int32 N = 4;
}

message C2M_TestRobotCase2 // ILocationMessage
{
	int32 RpcId = 1;
	int32 N = 2;
}

message M2C_TestRobotCase2 // ILocationMessage
{
	int32 RpcId = 1;
	int32 N = 2;
}

// ResponseType M2C_TransferMap
message C2M_TransferMap // ILocationRequest
{
	int32 RpcId = 1;
}

message M2C_TransferMap // ILocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

// ResponseType G2C_Benchmark
message C2G_Benchmark // ISessionRequest
{
	int32 RpcId = 1;
}

message G2C_Benchmark // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

// ResponseType R2C_LoginAccount
message C2R_LoginAccount // ISessionRequest
{
	int32 RpcId = 1;
	string AccountName = 2;
	string Password = 3;
}

message R2C_LoginAccount // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	string Token = 4;
}

message A2C_Disconnect // ISessionMessage
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

message ServerInfoProto
{
	int32 Id = 1;
	int32 Status = 2;
	string ServerName = 3;
}

//ResponseType R2C_GetServerInfos
message C2R_GetServerInfos	// ISessionRequest
{
	int32 RpcId = 90;
	string Token = 1;
	string Account = 2;
}

message R2C_GetServerInfos	// ISessionResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	repeated ServerInfoProto ServerInfosList = 1;
}

message RoleInfoProto
{
	int64 Id = 1;

	string Name = 2;

	int32 State = 3;

	string Account = 4;

	int64 LastLoginTime = 5;

	int64 CreateTime = 6;

	int32 ServerId = 7;
}

//ResponseType R2C_GetRoles
message C2R_GetRoles // ISessionRequest
{
	int32  RpcId     = 90;
	string Token     = 1;
	string  Account = 2;
	int32  ServerId  = 3;
}

message R2C_GetRoles // ISessionResponse
{
	int32 RpcId    = 90;
	int32 Error    = 91;
	string Message = 92;
	repeated RoleInfoProto RoleInfo = 1;
}

//ResponseType R2C_CreateRole
message C2R_CreateRole // ISessionRequest
{
	int32 RpcId     = 90;
	string Token    = 1;
	string Account = 2;
	string Name     = 3;
	int32 ServerId  = 4;
}


message R2C_CreateRole // ISessionResponse
{
	int32 RpcId    = 90;
	int32 Error    = 91;
	string Message = 92;
	RoleInfoProto RoleInfo = 1;
}

//ResponseType R2C_DeleteRole
message C2R_DeleteRole // ISessionRequest
{
	int32  RpcId      = 90;
	string Token      = 1;
	string  Account  = 2;
	int64  RoleInfoId = 3;
	int32  ServerId   = 4;
}

message R2C_DeleteRole // ISessionResponse
{
	int32 RpcId    = 90;
	int32 Error    = 91;
	string Message = 92;
	int64  DeletedRoleInfoId = 1;
}

//ResponseType R2C_GetRealmKey
message C2R_GetRealmKey // ISessionRequest
{
	int32 RpcId = 1;
	string Token = 2;
	string Account = 3;
	int32 ServerId = 4;
}

message R2C_GetRealmKey // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	string Address = 4;
	int64 Key = 5;
	int64 GateId = 6;
}

// ResponseType G2C_LoginGameGate
message C2G_LoginGameGate // ISessionRequest
{
	int32 RpcId = 1;

	string AccountName = 2;

	int64 Key = 3;

	int64 RoleId = 4;
}

message G2C_LoginGameGate // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;

	int64  PlayerId = 4;
}

//ResponseType G2C_EnterGame
message C2G_EnterGame // ISessionRequest
{
	int32 RpcId = 1;
}

message G2C_EnterGame // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;

	int64 MyUnitId = 4;
}

message M2C_NoticeUnitNumeric // IMessage
{
	int64 UnitId = 1;

	int32 NumericType = 2;

	int64 NewValue = 4;
}

//ResponseType M2C_TestUnitNumeric
message C2M_TestUnitNumeric // ILocationRequest
{
	int32 RpcId = 1;
}

message M2C_TestUnitNumeric // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType M2C_AddAttributePoint
message C2M_AddAttributePoint // ILocationRequest
{
	int32 RpcId = 1;
	int32 NumericType = 2;
}

message M2C_AddAttributePoint // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType M2C_StartGameLevel
message C2M_StartGameLevel // ILocationRequest
{
	int32 RpcId = 1;
	int32 LevelId = 2;
}

message M2C_StartGameLevel // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType M2C_EndGameLevel
message C2M_EndGameLevel // ILocationRequest
{
	int32 RpcId = 1;
	int32 Round   = 2;
	int32 BattleResult  = 3;
}

message M2C_EndGameLevel // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType M2C_UpRoleLevel
message C2M_UpRoleLevel // ILocationRequest
{
	int32 RpcId = 1;
}

message M2C_UpRoleLevel // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message AttributeEntryProto
{
	int64 Id = 1;
	int32 Key = 2;
	int64 Value = 3;
	int32 EntryType = 4;
}

message EquipInfoProto
{
	int64 Id    = 1;
	int32 Score = 2;
	repeated AttributeEntryProto AttributeEntryProtoList = 3;
}

message ItemInfo
{
	int64 ItemUid      = 1;
	int32 ItemConfigId = 2;
	int32 ItemQuality  = 3;

	EquipInfoProto EquipInfo = 4;
}

message M2C_ItemUpdateOpInfo // IMessage
{
	int32 RpcId = 90;
	ItemInfo ItemInfo = 1;
	int32    Op       = 2;
	int32    ContainerType = 3;
}

message M2C_AllItemsList // IMessage
{
	int32 RpcId = 90;
	repeated ItemInfo ItemInfoList = 1;
	int32    ContainerType = 2;
}


//ResponseType M2C_EquipItem
message C2M_EquipItem // ILocationRequest
{
	int32 RpcId = 1;
	int64 ItemUid = 2;
}

message M2C_EquipItem // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType M2C_UnloadEquipItem
message C2M_UnloadEquipItem // ILocationRequest
{
	int32 RpcId = 1;
	int32 EquipPosition = 2;
}

message M2C_UnloadEquipItem // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}


//ResponseType M2C_SellItem
message C2M_SellItem // ILocationRequest
{
	int32 RpcId = 1;
	int64 ItemUid = 2;
}

message M2C_SellItem // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//制作↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓

message ProductionProto
{
	int64 Id           = 1;
	int32 ConfigId     = 2;
	int64 TargetTime   = 3;
	int64 StartTime    = 4;
	int32 ProductionState = 5;
}

//ResponseType M2C_StartProduction
message C2M_StartProduction // ILocationRequest
{
	int32 RpcId    = 1;
	int32 ConfigId = 2;
}

message M2C_StartProduction // ILocationResponse
{
	int32 RpcId    = 90;
	int32 Error    = 91;
	string Message = 92;
	ProductionProto  ProductionProto = 2;
}


//ResponseType M2C_ReceiveProduction
message C2M_ReceiveProduction // ILocationRequest
{
	int32 RpcId        = 1;
	int64 ProducitonId = 2;
}

message M2C_ReceiveProduction // ILocationResponse
{
	int32 RpcId    = 90;
	int32 Error    = 91;
	string Message = 92;
	ProductionProto  ProductionProto = 1;
}

message M2C_AllProductionList // IMessage
{
	repeated ProductionProto ProductionProtoList = 1;
}
//end↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑

//任务↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
message TaskInfoProto
{
	int32 ConfigId  = 1;

	int32 TaskState = 2;

	int32 TaskPogress = 3;
}

message M2C_UpdateTaskInfo // IMessage
{
	TaskInfoProto TaskInfoProto = 1;
}

message M2C_AllTaskInfoList // IMessage
{
	repeated TaskInfoProto TaskInfoProtoList = 1;
}

//ResponseType M2C_ReceiveTaskReward
message C2M_ReceiveTaskReward // ILocationRequest
{
	int32 RpcId        = 1;
	int32 TaskConfigId = 2;
}

message M2C_ReceiveTaskReward // ILocationResponse
{
	int32 RpcId    = 90;
	int32 Error    = 91;
	string Message = 92;
}
//end↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑

//排行榜↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
message RankInfoProto
{
	int64 Id = 1;
	int64 UnitId = 2;
	string Name = 3;
	int32 Count = 5;
}

//ResponseType Rank2C_GetRanksInfo
message C2Rank_GetRanksInfo // IActorRankInfoRequest
{
	int32 RpcId        = 1;
}

message Rank2C_GetRanksInfo // IActorRankInfoResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	repeated RankInfoProto RankInfoProtoList = 1;
}
//end↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑